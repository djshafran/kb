const drawMainDiagram = () => {
    let svg = document.getElementById("main_diagram");
    // svg.setAttribute("viewBox", "0 0 1200 1200");
    if (svg === null) {
        console.log('drawMainDiagram cannot find svg with id main_diagram')
        return(0);
    }

    let center = { x: svg.viewBox.baseVal.width / 2, y: svg.viewBox.baseVal.height / 2 };
    let radius = Math.min(center.x, center.y);
    let layerThickness = radius / 5;

    let layers = [
        { parts: 2, colors: ["#AF6420", "#549695"], labels: ["Dev | CapEx", "Ops | OpEx"], links: ["/", "/"] },
        { parts: 4, colors: ["#392D75", "#E59F13", "#9FC713", "#0E759F"], labels: ["–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ", "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ", "–û–±–º–µ–Ω", "–ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ"], links: ["/", "/", "/", "/"] },
        {
            parts: 12, colors: ["#602980", "#9C1A55", "#C12020", "#D75020", "#FA9C20", "#FFCC20", "#FFEA20", "#80BE00", "#12A050", "#1E72B0", "#0150A0", "#342D90"],
            labels: ["üìù–§–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è", "üìê–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", "üìÖ–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "‚å®Ô∏è–ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ", "üîß –°–±–æ—Ä–∫–∞", "üêû–ò—Å–ø—ã—Ç–∞–Ω–∏—è", "üöÄ –í—ã–ø—É—Å–∫", "üöö –ü–æ—Å—Ç–∞–≤–∫–∞", "üñ•Ô∏è–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥", "ü§ñ –≠–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è", "üìö –û–±—É—á–µ–Ω–∏–µ", "‚úçÔ∏è –û—Ç–∑—ã–≤—ã"],
            links: ["https://petaflops.guru/metod/12-etapov/formalizatsiya", "https://petaflops.guru/metod/12-etapov/proektirovanie", "https://petaflops.guru/metod/12-etapov/planirovanie", "https://petaflops.guru/metod/12-etapov/codirovanie", "https://petaflops.guru/metod/12-etapov/sborka", "https://petaflops.guru/metod/12-etapov/ispitaniya", "https://petaflops.guru/metod/12-etapov/vipusk", "https://petaflops.guru/metod/12-etapov/postavka", "https://petaflops.guru/metod/12-etapov/monitoring", "https://petaflops.guru/metod/12-etapov/ekspluatatsiya", "https://petaflops.guru/metod/12-etapov/obuchenie", "https://petaflops.guru/metod/12-etapov/otzivi"]
        },
        { parts: 6, colors: ["#7C4087", "#D63420", "#FFB71F", "#FFD710", "#149C78", "#1B3CA4"], labels: ["üìå–ó–∞–¥–∞—á–∏", "üïí –°—Ä–æ–∫–∏", "üö¶–ö–∞—á–µ—Å—Ç–≤–æ", "üîÑ–û–±–Ω–æ–≤–ª–µ–Ω–∏—è", "üéñÔ∏è–†–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ", "üåü–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã"], links: ["/", "/", "/", "/", "/", "/"] },

        { parts: 3, colors: ["#602980", "#FA9C20", "#1E72B0"], labels: ["üìâ–î–µ—à–µ–≤–ª–µ", "üíé–õ—É—á—à–µ", "üèÜ–ë—ã—Å—Ç—Ä–µ–µ"], links: ["/", "/", "/"] },
    ];


    let startAngle = -Math.PI / 2;
    for (let i = layers.length - 1; i >= 0; i--) {
        let layer = layers[i];
        let sectionAngle = (Math.PI * 2) / layer.parts;
        let currentRadius = radius - i * layerThickness;

        for (let j = 0; j < layer.parts; j++) {
            let path = document.createElementNS("http://www.w3.org/2000/svg", "path");

            let d = [
                "M", center.x + currentRadius * Math.cos(startAngle), center.y + currentRadius * Math.sin(startAngle),
                "A", currentRadius, currentRadius, 0, +(sectionAngle > Math.PI), 1, center.x + currentRadius * Math.cos(startAngle + sectionAngle), center.y + currentRadius * Math.sin(startAngle + sectionAngle),
                "L", center.x + (currentRadius - layerThickness) * Math.cos(startAngle + sectionAngle), center.y + (currentRadius - layerThickness) * Math.sin(startAngle + sectionAngle),
                "A", currentRadius - layerThickness, currentRadius - layerThickness, 0, +(sectionAngle > Math.PI), 0, center.x + (currentRadius - layerThickness) * Math.cos(startAngle), center.y + (currentRadius - layerThickness) * Math.sin(startAngle),
                "Z"
            ].join(" ");

            path.setAttribute("d", d);
            path.setAttribute("fill", layer.colors[j]);
            svg.appendChild(path);

            let midAngle = startAngle + sectionAngle / 2;
            let textX = center.x + (currentRadius - layerThickness / 2) * Math.cos(midAngle);
            let textY = center.y + (currentRadius - layerThickness / 2) * Math.sin(midAngle);

            let link = document.createElementNS("http://www.w3.org/2000/svg", "a");
            link.setAttributeNS("http://www.w3.org/1999/xlink", "href", layer.links[j]);

            let emoji = layer.labels[j].split(' ')[0];
            let label = layer.labels[j].split(' ').slice(1).join(' ');

            let textIcon = document.createElementNS("http://www.w3.org/2000/svg", "text");
            textIcon.setAttribute("x", textX);
            textIcon.setAttribute("y", textY - 15); // —Å–¥–≤–∏–≥ –∏–∫–æ–Ω–∫–∏ –≤—ã—à–µ, —á—Ç–æ–±—ã –æ–Ω –±—ã–ª –≤—ã—à–µ —Ç–µ–∫—Å—Ç–∞
            textIcon.classList.add("label-icon");
            textIcon.textContent = emoji;

            let textLabel = document.createElementNS("http://www.w3.org/2000/svg", "text");
            textLabel.setAttribute("x", textX);
            textLabel.setAttribute("y", textY + 15);  // —Å–¥–≤–∏–≥ —Ç–µ–∫—Å—Ç–∞ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ–Ω –±—ã–ª –Ω–∏–∂–µ –∑–Ω–∞—á–∫–∞
            textLabel.classList.add("label-text");
            textLabel.textContent = label;

            link.appendChild(textIcon);
            link.appendChild(textLabel);            

            svg.appendChild(link);

            startAngle += sectionAngle;
        }
    }
}

document.addEventListener("DOMContentLoaded", function () {
    drawMainDiagram()
});